- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create VPC nsi-vpc
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ state }}"
      register: vpc_out

    - name: Create Public Subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_out.vpc.id }}"
        cidr: "{{ pubSub1Cidr }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        map_public: yes
        resource_tags:
          Name: "{{ vpc_name }}-public-subnet-1"
      register: pubSub1_out

    - name: Create Public Subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_out.vpc.id }}"
        cidr: "{{ pubSub2Cidr }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        map_public: yes
        resource_tags:
          Name: "{{ vpc_name }}-public-subnet-2"
      register: pubSub2_out

    - name: Create Public Subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_out.vpc.id }}"
        cidr: "{{ pubSub3Cidr }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        map_public: yes
        resource_tags:
          Name: "{{ vpc_name }}-public-subnet-3"
      register: pubSub3_out

    - name: Create Private Subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_out.vpc.id }}"
        cidr: "{{ privSub1Cidr }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        resource_tags:
          Name: "{{ vpc_name }}-private-subnet-1"
      register: privSub1_out

    - name: Create Private Subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_out.vpc.id }}"
        cidr: "{{ privSub2Cidr }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        resource_tags:
          Name: "{{ vpc_name }}-private-subnet-2"
      register: privSub2_out

    - name: Create Private Subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_out.vpc.id }}"
        cidr: "{{ privSub3Cidr }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        resource_tags:
          Name: "{{ vpc_name }}-private-subnet-3"
      register: privSub3_out

    - name: Create Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc_out.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: "{{ vpc_name }}-IGW"
      register: igw_out

    - name: Create public subnets Route Table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_out.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ vpc_name }}-PubRT"
        subnets:
          - "{{ pubSub1_out.subnet.id }}"
          - "{{ pubSub2_out.subnet.id }}"
          - "{{ pubSub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRT_out

    - name: Create new nat gateway and allocate EIP if a nat gateway does not exist
      ec2_nat_gateway:
        state: "{{ state }}"
        subnet_id: "{{ pubSub1_out.subnet.id }}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: Create private subnets Route Table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_out.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ vpc_name }}-PrivRT"
        subnets:
          - "{{ privSub1_out.subnet.id }}"
          - "{{ privSub2_out.subnet.id }}"
          - "{{ privSub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.gateway_id }}"
      register: privRT_out

    - debut:
        var: "{{ item }}"
      loop:
        - vpc_out.vpc.id
        - pubSub1_out.subnet.id
        - pubSub2_out.subnet.id
        - pubSub3_out.subnet.id
        - privSub1_out.subnet.id
        - privSub2_out.subnet.id
        - privSub3_out.subnet.id
        - igw_out.gateway_id
        - NATGW_out.nat_gateway_id
        - pubRT_out.route_table.id
        - privRT_out.route_table.id

    - set_fact:
        vpcid: "{{ vpc_out.vpc.id }}"
        pubsub1id: "{{ pubSub1_out.subnet.id }}"
        pubsub2id: "{{ pubSub2_out.subnet.id }}"
        pubsub3id: "{{ pubSub3_out.subnet.id }}"
        privsub1id: "{{ privSub1_out.subnet.id }}"
        privsub2id: "{{ privSub2_out.subnet.id }}"
        privsub3id: "{{ privSub3_out.subnet.id }}"
        igwid: "{{ igw_out.gateway_id }}"
        NATGWid: "{{ NATGW_out.nat_gateway_id }}"
        pubRTid: "{{ pubRT_out.route_table.id }}"
        privRTid: "{{ privRT_out.route_table.id }}"
        cacheable: yes

    - name: Create variable file for vpc output
      copy:
        content: |
          vpcid: "{{ vpcid }}\n"
          pubsub1id: "{{ pubsub1id }}\n"
          pubsub2id: "{{ pubsub2id }}\n"
          pubsub3id: "{{ pubsub3id }}\n"
          privsub1id: "{{ privsub1id }}\n"
          privsub2id: "{{ privsub2id }}\n"
          privsub3id: "{{ privsub3id }}\n"
          igwid: "{{ igwid }}\n"
          NATGWid: "{{ NATGWid }}\n"
          pubRTid: "{{ pubRTid }}\n"
          privRTid: "{{ privRTid }}\n"
        dest: vars/output_vars
